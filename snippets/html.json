{
	/*
	// Place your snippets for HTML here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"ngfor": {
		"prefix": "ngfor",
		"body": [
			"*ngFor=\"let $1 of $2\" "
		],
		"description": "*ngFor=\"let item of items\""
	},
	"ngif with equals": {
		"prefix": "ngife",
		"body": [
			"*ngIf=\"(${1:LHS} === ${2:RHS})\" "
		]
	},
	"ngif": {
		"prefix": "ngif",
		"body": [
			"*ngIf=\"${1:expression}\" "
		]
	},
	"ngclick": {
		"prefix": "ngclick",
		"body": [
			"(click)=\"${1:method}(${2:parameter})\" "
		]
	},
	"ngclass": {
		"prefix": "ngclass",
		"body": [
			"[ngClass]=\"{${1:class}: ${2:expression}}\" "
		]
	},
	"input": {
		"prefix": "input",
		"body": [
			"[${1:input}]=\"${2:value}\" "
		]
	},
	"output": {
		"prefix": "output",
		"body": [
			"(${1:output})=\"${2:method}(${3:param})\" "
		]
	},
	"ngmmodel": {
		"prefix": "ngmodel",
		"body": [
			"[(ngModel)]=\"${1:variable}\" "
		]
	},
	"ngmmodelchange": {
		"prefix": "ngmodel",
		"body": [
			"(ngModelChange)=\"${1:method}(${2:\\$event})\" "
		]
	},
	"ionicbutton": {
		"prefix": "ib",
		"body": [
			"<button (click)=\"${2:onClick}()\" ion-button full class=\"${3:class}\">",
			"\t${1:Next}",
			"</button>"
		]
	},
	"ionicinput": {
		"prefix": "ii",
		"body": [
			"<ion-item>",
			"\t<ion-input [(ngModel)]=\"${1:model}\" type=\"${2:type}\" placeholder=\"${3:placeholder}\"></ion-input>",
			"</ion-item>"
		]
	}
}
